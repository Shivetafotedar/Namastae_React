1)What is `NPM`?
● NPM is the package manager for the Node JavaScript platform. 
● It puts modules in place so that node can find them, and manages dependency conflicts intelligently.
● It is extremely configurable to support a wide variety of use cases. 
---------------------------------------------

2) What is `Parcel/Webpack`? Why do we need it?
● Parcel/Webpack are type of bundlers that we use to power our application with different type functionalities and features.
-------------------------------------------
3) What is `.parcel-cache`?
● The .cache folder (or .parcel-cache in parcel v2) stores information about your project when parcel builds it, 
so that when it rebuilds, it doesn't have to re-parse and re-analyze everything from scratch.It's a key reason why parcel can be so fast in development mode.
● We also put parcel.cache in git ignore. 
-------------------------------------------------
4) What is `npx` ?
● The npx stands for Node Package Execute and it comes with the npm
● It is an npm package runner that can execute any package that you want from the npm registry without even installing that package.
● The npx is useful during a single time use package.
-------------------------------------------------
5)What is difference between `dependencies` vs `devDependencies`?
● dependencies : Packages required by your application in production.
● devDependencies : Packages that are only needed for local development and testing.
-------------------------------------------------
6) What is Tree Shaking?
● Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code.
● It relies on the import and export statements to detect if code modules are exported and imported for use between JavaScript files.
● In modern JavaScript applications, we use module bundlers (e.g., webpack or Rollup) to automatically remove dead code when bundling 
multiple JavaScript files into single files.This is important for preparing code that is production ready, for example with clean structures and minimal file size.
-------------------------------------------------
7) What is Hot Module Replacement?
● Hot Module Replacement (HMR) exchanges, adds, or removes modules while an application is running, without a full reload.
 This can significantly speed up development in a few ways:

a)Retain application state which is lost during a full reload.
b)Save valuable development time by only updating what's changed.
c)Instantly update the browser when modifications are made to CSS/JS in the source code, which is almost comparable to changing styles directly in the browser's dev tools.
-------------------------------------------------
8) List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
● HMR - Hot module replacement : Parcel provides HMR properties to keep track of files changes by using file watcher algorithms.
● Compression : Parcel provides compression properties to compress our files e.g images to optimize the performance of our app.
● Minification : Parcel minifies the code.
● Zero config : Unlike Webpack, Parcel requires zero configurations to setup.
● Old browser competibility : Parcel allows support for older browser also.
-------------------------------------------------
9) What is `.gitignore`? What should we add and not add into it?
● The file contains the list of files that we should not commit to the repository.
-------------------------------------------------
10) What is the difference between `package.json` and `package-lock.json`?
●  package.json :
(a)this file is mandatory for every project
(b)It contains basicinformation about the project
(c)Application name/version/scripts (ng scripts)

● package-lock.json :
(a)This file is automatically generated for those operations where npm modifies either the node_module tree or package-json.

(b)It is generated after an npm install

(c)It allows future devs & automated systems to download the same dependencies as the project.

(d)it also allows to go back to the past version of the dependencies without actual ‘committing the node_modules folder.

(e)It records the same version of the installed packages which allows to reinstall them. Futuee installs wll be capable of building identical description tree.
(f)~ or ^ in package.json file : These are used with the versions of the package installed.

-------------------------------------------------
11) Why should I not modify `package-lock.json`?
● The file contains the information about the dependencies and their versions used in the project. 
Deleting it would cause depencies issues in the production environment.
-------------------------------------------------
12) What is `node_modules` ? Is it a good idea to push that on git?
● A module is any file or directory in the node_modules directory that can be loaded by the Node. js require() function.
 To be loaded by the Node. js require() function, a module must be one of the following: A folder with a package.
● No it is not a good idea to push node-modules in git because it take a lot of space.
-------------------------------------------------
13) What is the `dist` folder?
● The /dist folder contains the minimized version of the source code. The code present in the /dist folder is actually the code which is used on production web applications. 
Along with the minified code, the /dist folder also comprises of all the compiled modules that may or may not be used with other systems.
-------------------------------------------------
14) What is `browserlists`?
● Browserslist is a tool that allows specifying which browsers should be supported in your frontend app by specifying "queries" in a config file. 
It's used by frameworks/libraries such as React, Angular and Vue, but it's not limited to them.
-------------------------------------------------
15)Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret:- and ~ - tilda
-> (a) ~ : we can use it for minor version updates for a package.
(b) ^ : we can use it for major version updates for a package.
--------------------------------------------------------------------------------------------------------------------------

